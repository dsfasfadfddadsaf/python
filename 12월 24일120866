# def solution(food):
#     answer = ''
#     num = 0 # 넣을 음식의 개수
#     del food[0]
#     for food_list_A in food:
#         num += 1
#         answer += (food_list_A // 2) * str(num)
#     answer += '0' + answer[-1::-1]
#     return answer
# print(solution([1, 3, 4, 6]))
# print(solution([1, 7, 1, 2]))

# def solution(order):
#     cnt = str(order).count('3')+str(order).count('6')+str(order).count('9')
#
#     return cnt
# print(solution(29423))

# def solution(s):
#     result = ''
#     for i in s:
#         if s.count(i) == 1:
#             result += i
#     ''.join(sorted(result))
#     return result
# print(solution("abcabcadc"))
# print(solution("abdc"))

# def solution(k,  m, score):
#     answer = 0
#     a_list = []
#     score.sort(reverse=True)
#     for i in score:
#         a_list.append(i)
#         if len(a_list) == m:
#             a_list.sort()
#             answer += a_list[0] * m
#             a_list = []
#     return answer
# #print(solution(3,4,[1, 2, 3, 1, 2, 3, 1]))
# print(solution(4,3,[4, 1, 2, 2, 4, 4, 4, 4, 1, 2, 4, 2]))

# def solution(t, p):
#     answer = 0
#     for i in range(len(t)-len(p)+1):
#         if int(t[i:i+len(p)]) <= int(p):
#             answer +=1
#     return answer
#
# print(solution("3141592","271"))
# print(solution("500220839878","7"))
# print(solution("10203","15"))

def solution(board):
    answer = 0
    board_line = 0
    a = 0
    for i in board:
        board_line += 1
        for j in range(len(i)):
            if i[j] == 1:
                if j == 0:
                    board[board_line-1][j],board[board_line-1][j+1] = 1,1
                    board[board_line][j],board[board_line-1][j+1] = 1,1
                    board[board_line - 2][j], board[board_line - 2][j + 1] = 1, 1
                else:
                    board[board_line - 1][j-1],board[board_line - 1][j], board[board_line - 1][j + 1] = 1,1, 1
                    board[board_line][j-1]   ,board[board_line][j], board[board_line][j + 1] = 1,1,1
                    board[board_line +1][j-1],board[board_line +1][j]  ,board[board_line +1][j + 1] = 1, 1,1
    print(i)
    return answer
print(solution([[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 1, 0, 0], [0, 0, 0, 0, 0]]))
