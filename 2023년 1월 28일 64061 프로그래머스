# [1,2,3,1]를 찾고
# [1,2,3,1]를 리스트에서 지운다
# [1,2,3,1]가 있으면 개속 반복한다

# def solution(ingredient):
#     answer = 0
#     a_list = []
#     for i in ingredient:
#         a_list.append(i)
#         if len(a_list) >= 4 and a_list[-4:] == [1,2,3,1]:
#                 del a_list[-4:]
#             answer +=1
#     return answer
# print(solution([2, 1, 1, 2, 3, 1, 2, 3, 1]))
# print(solution([1, 3, 2, 1, 2, 1, 3, 1, 2]))

# def solution(ingredient):
#     answer = 0
#     make = []
#     for i in ingredient:
#         make.append(i)
#         if len(make) >= 4 and make[-4:]== [1,2,3,1]:
#             del make[-4:]
#             answer += 1
#     return answer
# print(solution([2, 1, 1, 2, 3, 1, 2, 3, 1]))

# def solution(s):
#     answer = 0
#     x = 0
#     while s:
#         y = 0
#         z = 0
#         for i in range(len(s)):
#             if s[x] == s[i]:
#                 y += 1
#             else:
#                 z += 1
#             if y == z:
#                 answer += 1
#                 z = y = 0
#                 s = s[i+1:]
#                 break
#     return answer
# print(solution("banana"))


def solution(board, moves):
    answer = 0
    box = []
    for i in moves:
        for j in range(len(board[0])):
            if board[j][i-1] != 0:
                box.append(board[j][i-1])
                board[j][i-1] = 0
                print(box)
                break
    return answer
print(solution([[0,0,0,0,0],
                [0,0,1,0,3],
                [0,2,5,0,1],
                [4,2,4,4,2],
                [3,5,1,3,1]],[1,5,3,5,1,2,1,4]))
