# def solution(board, moves):
#     answer = 0
#     box = []
#     for i in moves:
#         for j in range(len(board)):
#             if board[j][i-1] != 0:
#                 box.append(board[j][i-1])
#                 board[j][i-1] = 0
#                 if  len(box) > 1 and box[-1] == box[-2]:
#                      answer += 2
#                      del box[-2]
#                      del box[-1]
#                 break
#
#     return answer
# print(solution([ [0,0,0,0,0]
#                 ,[0,0,1,0,3]
#                 ,[0,2,5,0,1]
#                 ,[4,2,4,4,2]
#                 ,[3,5,1,3,1]],[1,5,3,5,1,2,1,4]))

# def solution(today, terms, privacies):
#     answer = []
#     ty,tm,td = map(int,today.split('.'))
#     today = ty * 12 * 28 + tm * 28 + td
#     for n,p in enumerate(privacies,start=1):
#         date,alpah = p.split()
#         dy,dm,dd = map(int,date.split('.'))
#         d_day= dy * 12 * 28 + dm *28 +dd
#         for term in terms:
#             A,N = term.split()
#             if alpah == A:
#                 d_day +=int(N)*28-1
#                 break
#             print(f"today = {today},d_day =  {d_day}")
#         if today > d_day:
#             answer.append(n)
#     return answer
# print(solution("2022.05.19",["A 6", "B 12", "C 3"],["2021.05.02 A", "2021.07.01 B", "2022.02.19 C", "2022.02.20 C"]))

def solution(babbling):
    c = 0
    for b in babbling:
        for w in [ "aya", "ye", "woo", "ma" ]:
    #         if w * 2 not in b:
    #             b = b.replace(w, ' ')
    #     if len(b.strip()) == 0:
    #         c += 1
    # return c
print(solution(["aya", "yee", "u", "maa"]))
# print(solution(["ayaye", "uuu", "yeye", "yemawoo", "ayaayaa"]))
