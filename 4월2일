#약수 구하는 함수
# def count_divisor(n):
#     count = 0
#     fir i in range(1, n+1):
#         if n % i == 0:
#             count += 1
#     return count

# def solution(price, money,count):
#     while True:
#         money -= (price*count)
#         count -= 1
#         if count ==0:
#             break
#     if money < 0:
#         return money*(-1)
#     else:
#         return 0

#파일 만들기
# f=open("새파일.txt", 'w')
#
# for i in range(1,11):
#     data = "%번쨰 줄입니다. /n"%i
#     print(data)
#
# f = open("새파일.txt", 'w')
# for i in range(1,11):
#     data = "%d번쨰 줄입니다. \n"%i
#     f.write(data)
# f.close()

# f = open("새파일.txt", 'r')
# line = f.readline()
# print(line)
# f.close()

# f = open("새파일.txt",'r')
# while True:
#     line = f.readline()
#     if not line:
#         break
#     print(line)
# f.close()

# f = open("새파일.txt", 'r')
# lines = f.readline()
# for line in lines:
#     line = line.strip()
#     print(line)
# f.close()
#
# f=open("새파일.txt", 'r')
# data = f.read()
# print(data)
# f.close()

# f = open("새파일.txt", 'a')
# for i in range(11,20):
#     data= "%d번쨰 줄입니다\n"%i
#     f.write(data)
# f.close()
#
# f= open("foo,fxf", 'w')
# f.write("life is too short, you need python")
# f.close()
#
# with open("foo.txt", "w") as f:
#     f.write("Life is too short, you need python")
#
# file_name="password.txt"
# f = open(file_name, "w") #--1단개 파일생성--
# while True:
#     url = input("사이트 : ")
#     if url =="exit":
#         break
#     my_str = url.replace("https://www.","")
#     my_str = my_str[:my_str.find(".")]
#     print("방문 사이트 :"+my_str)
#
#     pswd = my_str[:3]+str(len(my_str))+str(my_str.count("o"))+"!"+"PDH"
#     print("비밀번호 :"+pswd)
#     f.write(pswd +"\n")
# f.close()

# f = open('foo.txt')
# score = dict()
# for line in f:
#     info = line.split()
#     key = info[0]
#     value = [int(x) for x in info[1:]]
#     score[key] = value
#
# for k, v in score.items():
#     avg = (sum(v)-min(v)) / 3
#     print('{} - {:.2f}'.format(k, avg))
# f.close()

#include <stdio.h>
#include <stdbool.h>
#include <stdlib.h>

def solution(numbers):
    answer = 0
    hap = 0
    for i in range(len(numbers)):
        hap += numbers[i]
    answer = 45 -hap
    return answer
solution()


