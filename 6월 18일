# capitalize 0번째 문자가 대문자로 변경된다.
# satartswith(*) 해당문자가 *로 시작하는지를 물어보는 함수. True/False 반환
# endswith(*) 해당문자가 *로 끝나는지를 물어보는 함수. True/False 반환
# (a.is~) is로 시작하는 함수들은 물어보는 함수 = True/False를 반환
# (a.isalpha) a라는 문자가 알파벳인지를 물어본다.
# (a.isdigih()) a라는 문자가 숫자로 이루어져 있는지 물어본다.


# def solution(s):
#     nums = {"zero": "0", "one": "1", "tow": "2", "three": "3", "four": "4", "five": "5", "six": "6", "seven": "7", "eight": "8", "nine": "9"}
#     for key,value in nums.items():
#         if key in s:
#             s = s.replace(key,value)
#     return int(s)
# print(solution("one4seveneight"))
#
# 1단계 new_id의 모든 대문자를 대응되는 소문자로 치환합니다.
# 2단계 new_id에서 알파벳 소문자, 숫자, 빼기(-), 밑줄(_), 마침표(.)를 제외한 모든 문자를 제거합니다.
# 3단계 new_id에서 마침표(.)가 2번 이상 연속된 부분을 하나의 마침표(.)로 치환합니다.
# 4단계 new_id에서 마침표(.)가 처음이나 끝에 위치한다면 제거합니다.
# 5단계 new_id가 빈 문자열이라면, new_id에 "a"를 대입합니다.
# 6단계 new_id의 길이가 16자 이상이면, new_id의 첫 15개의 문자를 제외한 나머지 문자들을 모두 제거합니다.
#      만약 제거 후 마침표(.)가 new_id의 끝에 위치한다면 끝에 위치한 마침표(.) 문자를 제거합니다.
# 7단계 new_id의 길이가 2자 이하라면, new_id의 마지막 문자를 new_id의 길이가 3이 될 때까지 반복해서 끝에 붙입니다.

def solution(new_id):
    #1단계
    new_id = new_id.lower()
    #2단계
    for i in new_id:
        if not i.isalnum and  i != '-' and  i != '_' and  i != '.':
            new_id = new_id.replane(i,'')
    #3단계
    while '..' in new_id:
        new_id = (new_id.replane('..','.'))
    #4단계
    new_id = new_id.strip('.')
    #5단계
    if new_id == '':
        new_id = 'a'
    #6단계
    if len(new_id) >= 16:
        new_id = new_id[0:15]
        if new_id[-1] == '.':
            new_id = new_id[:-1]
    #7단계
    while len(new_id) < 3:
        new_id += new_id[-1]
    return new_id
